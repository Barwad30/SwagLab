<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="50" passed="46" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-11T01:07:42 IST" name="Suite" finished-at="2023-09-11T01:14:31 IST" duration-ms="409388">
    <groups>
    </groups>
    <test started-at="2023-09-11T01:07:42 IST" name="Test" finished-at="2023-09-11T01:14:31 IST" duration-ms="409388">
      <class name="test.OverviewTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:07:44 IST" name="configureReports" finished-at="2023-09-11T01:07:44 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:11:56 IST" name="openBrowser" finished-at="2023-09-11T01:12:00 IST" duration-ms="4109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheCheckoutOverivewPageWithFinishButton()[pri:1, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:12:00 IST" name="verifyTheCheckoutOverivewPageWithFinishButton" finished-at="2023-09-11T01:12:01 IST" duration-ms="1739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheCheckoutOverivewPageWithFinishButton -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:12:01 IST" name="captureResult" finished-at="2023-09-11T01:12:02 IST" duration-ms="333" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheCheckoutOverivewPageWithFinishButton status=SUCCESS method=OverviewTest.verifyTheCheckoutOverivewPageWithFinishButton()[pri:1, instance:test.OverviewTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:12:02 IST" name="openBrowser" finished-at="2023-09-11T01:12:06 IST" duration-ms="4517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheCheckoutOverviewPageWithBackHomeButton()[pri:2, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:12:06 IST" name="verifyTheCheckoutOverviewPageWithBackHomeButton" finished-at="2023-09-11T01:12:08 IST" duration-ms="2072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheCheckoutOverviewPageWithBackHomeButton -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:12:08 IST" name="captureResult" finished-at="2023-09-11T01:12:09 IST" duration-ms="447" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheCheckoutOverviewPageWithBackHomeButton status=SUCCESS method=OverviewTest.verifyTheCheckoutOverviewPageWithBackHomeButton()[pri:2, instance:test.OverviewTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:12:09 IST" name="openBrowser" finished-at="2023-09-11T01:12:13 IST" duration-ms="4277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheProductPrice()[pri:3, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:12:13 IST" name="verifyTheProductPrice" finished-at="2023-09-11T01:12:14 IST" duration-ms="1340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheProductPrice -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:12:14 IST" name="captureResult" finished-at="2023-09-11T01:12:15 IST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheProductPrice status=SUCCESS method=OverviewTest.verifyTheProductPrice()[pri:3, instance:test.OverviewTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:12:15 IST" name="openBrowser" finished-at="2023-09-11T01:12:19 IST" duration-ms="4195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyIteamTotalWithAdditionOfProductPrice()[pri:4, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:12:19 IST" name="verifyIteamTotalWithAdditionOfProductPrice" finished-at="2023-09-11T01:12:21 IST" duration-ms="2041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIteamTotalWithAdditionOfProductPrice -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:12:21 IST" name="captureResult" finished-at="2023-09-11T01:12:21 IST" duration-ms="371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyIteamTotalWithAdditionOfProductPrice status=SUCCESS method=OverviewTest.verifyIteamTotalWithAdditionOfProductPrice()[pri:4, instance:test.OverviewTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:12:21 IST" name="openBrowser" finished-at="2023-09-11T01:12:26 IST" duration-ms="4666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifySumofIteamTotalAndTaxWithTotalPrice()[pri:5, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:12:26 IST" name="verifySumofIteamTotalAndTaxWithTotalPrice" finished-at="2023-09-11T01:12:28 IST" duration-ms="1792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySumofIteamTotalAndTaxWithTotalPrice -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:12:28 IST" name="captureResult" finished-at="2023-09-11T01:12:28 IST" duration-ms="308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySumofIteamTotalAndTaxWithTotalPrice status=SUCCESS method=OverviewTest.verifySumofIteamTotalAndTaxWithTotalPrice()[pri:5, instance:test.OverviewTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.OverviewTest@24313fcc]" started-at="2023-09-11T01:14:31 IST" name="publish" finished-at="2023-09-11T01:14:31 IST" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.OverviewTest -->
      <class name="test.SwagLabLoginTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.SwagLabLoginTest@6ad82709]" started-at="2023-09-11T01:07:44 IST" name="configureReports" finished-at="2023-09-11T01:07:44 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.SwagLabLoginTest@6ad82709]" started-at="2023-09-11T01:07:44 IST" name="openBrowser" finished-at="2023-09-11T01:08:40 IST" duration-ms="56618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="logInWithValidStandardUser()[pri:1, instance:test.SwagLabLoginTest@6ad82709]" started-at="2023-09-11T01:08:40 IST" name="logInWithValidStandardUser" finished-at="2023-09-11T01:08:41 IST" duration-ms="731" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInWithValidStandardUser -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwagLabLoginTest@6ad82709]" started-at="2023-09-11T01:08:41 IST" name="captureResult" finished-at="2023-09-11T01:08:42 IST" duration-ms="645" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logInWithValidStandardUser status=SUCCESS method=SwagLabLoginTest.logInWithValidStandardUser()[pri:1, instance:test.SwagLabLoginTest@6ad82709] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.SwagLabLoginTest@6ad82709]" started-at="2023-09-11T01:08:42 IST" name="openBrowser" finished-at="2023-09-11T01:08:46 IST" duration-ms="4528" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="logInWithLockedOutUser()[pri:2, instance:test.SwagLabLoginTest@6ad82709]" started-at="2023-09-11T01:08:46 IST" name="logInWithLockedOutUser" finished-at="2023-09-11T01:08:47 IST" duration-ms="440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInWithLockedOutUser -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwagLabLoginTest@6ad82709]" started-at="2023-09-11T01:08:47 IST" name="captureResult" finished-at="2023-09-11T01:08:47 IST" duration-ms="234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logInWithLockedOutUser status=SUCCESS method=SwagLabLoginTest.logInWithLockedOutUser()[pri:2, instance:test.SwagLabLoginTest@6ad82709] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.SwagLabLoginTest@6ad82709]" started-at="2023-09-11T01:08:47 IST" name="openBrowser" finished-at="2023-09-11T01:08:51 IST" duration-ms="4383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="logInWithProblemUser()[pri:3, instance:test.SwagLabLoginTest@6ad82709]" started-at="2023-09-11T01:08:51 IST" name="logInWithProblemUser" finished-at="2023-09-11T01:08:52 IST" duration-ms="428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInWithProblemUser -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwagLabLoginTest@6ad82709]" started-at="2023-09-11T01:08:52 IST" name="captureResult" finished-at="2023-09-11T01:08:52 IST" duration-ms="239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logInWithProblemUser status=SUCCESS method=SwagLabLoginTest.logInWithProblemUser()[pri:3, instance:test.SwagLabLoginTest@6ad82709] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.SwagLabLoginTest@6ad82709]" started-at="2023-09-11T01:08:52 IST" name="openBrowser" finished-at="2023-09-11T01:08:56 IST" duration-ms="4202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="logInWithPerformanceGlitchUser()[pri:4, instance:test.SwagLabLoginTest@6ad82709]" started-at="2023-09-11T01:08:56 IST" name="logInWithPerformanceGlitchUser" finished-at="2023-09-11T01:09:02 IST" duration-ms="5521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInWithPerformanceGlitchUser -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwagLabLoginTest@6ad82709]" started-at="2023-09-11T01:09:02 IST" name="captureResult" finished-at="2023-09-11T01:09:02 IST" duration-ms="391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logInWithPerformanceGlitchUser status=SUCCESS method=SwagLabLoginTest.logInWithPerformanceGlitchUser()[pri:4, instance:test.SwagLabLoginTest@6ad82709] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.SwagLabLoginTest@6ad82709]" started-at="2023-09-11T01:14:31 IST" name="publish" finished-at="2023-09-11T01:14:31 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.SwagLabLoginTest -->
      <class name="test.FooterTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.FooterTest@544fa968]" started-at="2023-09-11T01:07:44 IST" name="configureReports" finished-at="2023-09-11T01:07:44 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.FooterTest@544fa968]" started-at="2023-09-11T01:09:02 IST" name="openBrowser" finished-at="2023-09-11T01:09:07 IST" duration-ms="4712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheWorkingOfFacebook()[pri:1, instance:test.FooterTest@544fa968]" started-at="2023-09-11T01:09:07 IST" name="verifyTheWorkingOfFacebook" finished-at="2023-09-11T01:09:12 IST" duration-ms="4737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheWorkingOfFacebook -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.FooterTest@544fa968]" started-at="2023-09-11T01:09:12 IST" name="captureResult" finished-at="2023-09-11T01:09:12 IST" duration-ms="164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheWorkingOfFacebook status=SUCCESS method=FooterTest.verifyTheWorkingOfFacebook()[pri:1, instance:test.FooterTest@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.FooterTest@544fa968]" started-at="2023-09-11T01:09:12 IST" name="openBrowser" finished-at="2023-09-11T01:09:17 IST" duration-ms="5461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheWorkingOfTwitter()[pri:2, instance:test.FooterTest@544fa968]" started-at="2023-09-11T01:09:17 IST" name="verifyTheWorkingOfTwitter" finished-at="2023-09-11T01:09:24 IST" duration-ms="6580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheWorkingOfTwitter -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.FooterTest@544fa968]" started-at="2023-09-11T01:09:24 IST" name="captureResult" finished-at="2023-09-11T01:09:24 IST" duration-ms="71" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheWorkingOfTwitter status=SUCCESS method=FooterTest.verifyTheWorkingOfTwitter()[pri:2, instance:test.FooterTest@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.FooterTest@544fa968]" started-at="2023-09-11T01:09:24 IST" name="openBrowser" finished-at="2023-09-11T01:09:29 IST" duration-ms="5328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheWorkingOfLinkedin()[pri:3, instance:test.FooterTest@544fa968]" started-at="2023-09-11T01:09:29 IST" name="verifyTheWorkingOfLinkedin" finished-at="2023-09-11T01:09:33 IST" duration-ms="3713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheWorkingOfLinkedin -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.FooterTest@544fa968]" started-at="2023-09-11T01:09:33 IST" name="captureResult" finished-at="2023-09-11T01:09:33 IST" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheWorkingOfLinkedin status=SUCCESS method=FooterTest.verifyTheWorkingOfLinkedin()[pri:3, instance:test.FooterTest@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.FooterTest@544fa968]" started-at="2023-09-11T01:09:33 IST" name="openBrowser" finished-at="2023-09-11T01:09:38 IST" duration-ms="4997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyThetextOfFooter()[pri:4, instance:test.FooterTest@544fa968]" started-at="2023-09-11T01:09:38 IST" name="verifyThetextOfFooter" finished-at="2023-09-11T01:09:39 IST" duration-ms="680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThetextOfFooter -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.FooterTest@544fa968]" started-at="2023-09-11T01:09:39 IST" name="captureResult" finished-at="2023-09-11T01:09:39 IST" duration-ms="463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThetextOfFooter status=SUCCESS method=FooterTest.verifyThetextOfFooter()[pri:4, instance:test.FooterTest@544fa968] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.FooterTest@544fa968]" started-at="2023-09-11T01:14:31 IST" name="publish" finished-at="2023-09-11T01:14:31 IST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.FooterTest -->
      <class name="test.ProductPageTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:07:44 IST" name="configureReports" finished-at="2023-09-11T01:07:44 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:06 IST" name="openBrowser" finished-at="2023-09-11T01:11:10 IST" duration-ms="3881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheProductImage()[pri:1, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:10 IST" name="verifyTheProductImage" finished-at="2023-09-11T01:11:10 IST" duration-ms="576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheProductImage -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:10 IST" name="captureResult" finished-at="2023-09-11T01:11:11 IST" duration-ms="374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheProductImage status=SUCCESS method=ProductPageTest.verifyTheProductImage()[pri:1, instance:test.ProductPageTest@5e5d171f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:11 IST" name="openBrowser" finished-at="2023-09-11T01:11:15 IST" duration-ms="4236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheProductNameLink()[pri:2, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:15 IST" name="verifyTheProductNameLink" finished-at="2023-09-11T01:11:15 IST" duration-ms="605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheProductNameLink -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:15 IST" name="captureResult" finished-at="2023-09-11T01:11:16 IST" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheProductNameLink status=SUCCESS method=ProductPageTest.verifyTheProductNameLink()[pri:2, instance:test.ProductPageTest@5e5d171f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:16 IST" name="openBrowser" finished-at="2023-09-11T01:11:20 IST" duration-ms="4686" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheProductsList()[pri:3, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:20 IST" name="verifyTheProductsList" finished-at="2023-09-11T01:11:22 IST" duration-ms="1242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheProductsList -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:22 IST" name="captureResult" finished-at="2023-09-11T01:11:22 IST" duration-ms="581" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheProductsList status=SUCCESS method=ProductPageTest.verifyTheProductsList()[pri:3, instance:test.ProductPageTest@5e5d171f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:22 IST" name="openBrowser" finished-at="2023-09-11T01:11:26 IST" duration-ms="4095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheMouseOverTheProductName()[pri:4, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:26 IST" name="verifyTheMouseOverTheProductName" finished-at="2023-09-11T01:11:27 IST" duration-ms="673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheMouseOverTheProductName -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:27 IST" name="captureResult" finished-at="2023-09-11T01:11:27 IST" duration-ms="386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheMouseOverTheProductName status=SUCCESS method=ProductPageTest.verifyTheMouseOverTheProductName()[pri:4, instance:test.ProductPageTest@5e5d171f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:27 IST" name="openBrowser" finished-at="2023-09-11T01:11:31 IST" duration-ms="4215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheClickOnAddToCart()[pri:5, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:31 IST" name="verifyTheClickOnAddToCart" finished-at="2023-09-11T01:11:32 IST" duration-ms="903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheClickOnAddToCart -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:32 IST" name="captureResult" finished-at="2023-09-11T01:11:33 IST" duration-ms="321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheClickOnAddToCart status=SUCCESS method=ProductPageTest.verifyTheClickOnAddToCart()[pri:5, instance:test.ProductPageTest@5e5d171f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:33 IST" name="openBrowser" finished-at="2023-09-11T01:11:37 IST" duration-ms="4306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheClickOnFilterAtoZ()[pri:6, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:37 IST" name="verifyTheClickOnFilterAtoZ" finished-at="2023-09-11T01:11:38 IST" duration-ms="953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheClickOnFilterAtoZ -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:38 IST" name="captureResult" finished-at="2023-09-11T01:11:38 IST" duration-ms="360" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheClickOnFilterAtoZ status=SUCCESS method=ProductPageTest.verifyTheClickOnFilterAtoZ()[pri:6, instance:test.ProductPageTest@5e5d171f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:38 IST" name="openBrowser" finished-at="2023-09-11T01:11:42 IST" duration-ms="4148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheClickOnFilterZtoA()[pri:7, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:42 IST" name="verifyTheClickOnFilterZtoA" finished-at="2023-09-11T01:11:44 IST" duration-ms="1050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheClickOnFilterZtoA -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:44 IST" name="captureResult" finished-at="2023-09-11T01:11:44 IST" duration-ms="452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheClickOnFilterZtoA status=SUCCESS method=ProductPageTest.verifyTheClickOnFilterZtoA()[pri:7, instance:test.ProductPageTest@5e5d171f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:44 IST" name="openBrowser" finished-at="2023-09-11T01:11:48 IST" duration-ms="4494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheClickOnFilterLowToHigh()[pri:8, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:48 IST" name="verifyTheClickOnFilterLowToHigh" finished-at="2023-09-11T01:11:49 IST" duration-ms="1013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheClickOnFilterLowToHigh -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:50 IST" name="captureResult" finished-at="2023-09-11T01:11:50 IST" duration-ms="293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheClickOnFilterLowToHigh status=SUCCESS method=ProductPageTest.verifyTheClickOnFilterLowToHigh()[pri:8, instance:test.ProductPageTest@5e5d171f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:50 IST" name="openBrowser" finished-at="2023-09-11T01:11:54 IST" duration-ms="4692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheClickOnFilterHighToLow()[pri:9, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:54 IST" name="verifyTheClickOnFilterHighToLow" finished-at="2023-09-11T01:11:55 IST" duration-ms="743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheClickOnFilterHighToLow -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:11:55 IST" name="captureResult" finished-at="2023-09-11T01:11:56 IST" duration-ms="392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheClickOnFilterHighToLow status=SUCCESS method=ProductPageTest.verifyTheClickOnFilterHighToLow()[pri:9, instance:test.ProductPageTest@5e5d171f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.ProductPageTest@5e5d171f]" started-at="2023-09-11T01:14:31 IST" name="publish" finished-at="2023-09-11T01:14:31 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.ProductPageTest -->
      <class name="test.LogOutTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.LogOutTest@d35dea7]" started-at="2023-09-11T01:07:44 IST" name="configureReports" finished-at="2023-09-11T01:07:44 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.LogOutTest@d35dea7]" started-at="2023-09-11T01:09:46 IST" name="openBrowser" finished-at="2023-09-11T01:09:51 IST" duration-ms="5024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheWorkingOfLogout()[pri:0, instance:test.LogOutTest@d35dea7]" started-at="2023-09-11T01:09:51 IST" name="verifyTheWorkingOfLogout" finished-at="2023-09-11T01:09:52 IST" duration-ms="1132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheWorkingOfLogout -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.LogOutTest@d35dea7]" started-at="2023-09-11T01:09:52 IST" name="captureResult" finished-at="2023-09-11T01:09:53 IST" duration-ms="373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheWorkingOfLogout status=SUCCESS method=LogOutTest.verifyTheWorkingOfLogout()[pri:0, instance:test.LogOutTest@d35dea7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.LogOutTest@d35dea7]" started-at="2023-09-11T01:14:31 IST" name="publish" finished-at="2023-09-11T01:14:31 IST" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.LogOutTest -->
      <class name="test.AboutTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.AboutTest@7d20d0b]" started-at="2023-09-11T01:07:42 IST" name="configureReports" finished-at="2023-09-11T01:07:44 IST" duration-ms="1469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.AboutTest@7d20d0b]" started-at="2023-09-11T01:12:28 IST" name="openBrowser" finished-at="2023-09-11T01:12:32 IST" duration-ms="3990" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheWorkingOfAboutPage()[pri:0, instance:test.AboutTest@7d20d0b]" started-at="2023-09-11T01:12:32 IST" name="verifyTheWorkingOfAboutPage" finished-at="2023-09-11T01:12:47 IST" duration-ms="15290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheWorkingOfAboutPage -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AboutTest@7d20d0b]" started-at="2023-09-11T01:12:47 IST" name="captureResult" finished-at="2023-09-11T01:12:48 IST" duration-ms="564" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheWorkingOfAboutPage status=SUCCESS method=AboutTest.verifyTheWorkingOfAboutPage()[pri:0, instance:test.AboutTest@7d20d0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.AboutTest@7d20d0b]" started-at="2023-09-11T01:14:29 IST" name="publish" finished-at="2023-09-11T01:14:30 IST" duration-ms="1104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.AboutTest -->
      <class name="test.EndToEndTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.EndToEndTest@247bddad]" started-at="2023-09-11T01:07:44 IST" name="configureReports" finished-at="2023-09-11T01:07:44 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.EndToEndTest@247bddad]" started-at="2023-09-11T01:09:39 IST" name="openBrowser" finished-at="2023-09-11T01:09:44 IST" duration-ms="4448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheCoustomerAbleToPlaceOrderSuccessuflly()[pri:0, instance:test.EndToEndTest@247bddad]" started-at="2023-09-11T01:09:44 IST" name="verifyTheCoustomerAbleToPlaceOrderSuccessuflly" finished-at="2023-09-11T01:09:46 IST" duration-ms="1780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheCoustomerAbleToPlaceOrderSuccessuflly -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.EndToEndTest@247bddad]" started-at="2023-09-11T01:09:46 IST" name="captureResult" finished-at="2023-09-11T01:09:46 IST" duration-ms="440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheCoustomerAbleToPlaceOrderSuccessuflly status=SUCCESS method=EndToEndTest.verifyTheCoustomerAbleToPlaceOrderSuccessuflly()[pri:0, instance:test.EndToEndTest@247bddad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.EndToEndTest@247bddad]" started-at="2023-09-11T01:14:31 IST" name="publish" finished-at="2023-09-11T01:14:31 IST" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.EndToEndTest -->
      <class name="test.AddToCartTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:07:44 IST" name="configureReports" finished-at="2023-09-11T01:07:44 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:09:53 IST" name="openBrowser" finished-at="2023-09-11T01:09:59 IST" duration-ms="6287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheClickOnAddToCart()[pri:1, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:09:59 IST" name="verifyTheClickOnAddToCart" finished-at="2023-09-11T01:09:59 IST" duration-ms="570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheClickOnAddToCart -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:09:59 IST" name="captureResult" finished-at="2023-09-11T01:10:01 IST" duration-ms="1617" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheClickOnAddToCart status=SUCCESS method=AddToCartTest.verifyTheClickOnAddToCart()[pri:1, instance:test.AddToCartTest@7770f470] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:01 IST" name="openBrowser" finished-at="2023-09-11T01:10:08 IST" duration-ms="6576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheClickOncart()[pri:2, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:08 IST" name="verifyTheClickOncart" finished-at="2023-09-11T01:10:08 IST" duration-ms="708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheClickOncart -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:08 IST" name="captureResult" finished-at="2023-09-11T01:10:09 IST" duration-ms="763" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheClickOncart status=SUCCESS method=AddToCartTest.verifyTheClickOncart()[pri:2, instance:test.AddToCartTest@7770f470] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:09 IST" name="openBrowser" finished-at="2023-09-11T01:10:14 IST" duration-ms="5208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheClickOnRemoveButton()[pri:3, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:14 IST" name="verifyTheClickOnRemoveButton" finished-at="2023-09-11T01:10:15 IST" duration-ms="614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheClickOnRemoveButton -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:15 IST" name="captureResult" finished-at="2023-09-11T01:10:15 IST" duration-ms="290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheClickOnRemoveButton status=SUCCESS method=AddToCartTest.verifyTheClickOnRemoveButton()[pri:3, instance:test.AddToCartTest@7770f470] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:15 IST" name="openBrowser" finished-at="2023-09-11T01:10:20 IST" duration-ms="4947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyRemoveProductFromProductDetailsPage()[pri:4, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:20 IST" name="verifyRemoveProductFromProductDetailsPage" finished-at="2023-09-11T01:10:21 IST" duration-ms="737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRemoveProductFromProductDetailsPage -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:21 IST" name="captureResult" finished-at="2023-09-11T01:10:21 IST" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRemoveProductFromProductDetailsPage status=SUCCESS method=AddToCartTest.verifyRemoveProductFromProductDetailsPage()[pri:4, instance:test.AddToCartTest@7770f470] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:21 IST" name="openBrowser" finished-at="2023-09-11T01:10:26 IST" duration-ms="4528" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyClickOnContinueShoppingButton()[pri:5, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:26 IST" name="verifyClickOnContinueShoppingButton" finished-at="2023-09-11T01:10:27 IST" duration-ms="927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyClickOnContinueShoppingButton -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:27 IST" name="captureResult" finished-at="2023-09-11T01:10:27 IST" duration-ms="171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyClickOnContinueShoppingButton status=SUCCESS method=AddToCartTest.verifyClickOnContinueShoppingButton()[pri:5, instance:test.AddToCartTest@7770f470] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:27 IST" name="openBrowser" finished-at="2023-09-11T01:10:34 IST" duration-ms="7492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyClickOnCheckoutButton()[pri:6, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:34 IST" name="verifyClickOnCheckoutButton" finished-at="2023-09-11T01:10:35 IST" duration-ms="943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyClickOnCheckoutButton -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:35 IST" name="captureResult" finished-at="2023-09-11T01:10:36 IST" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyClickOnCheckoutButton status=SUCCESS method=AddToCartTest.verifyClickOnCheckoutButton()[pri:6, instance:test.AddToCartTest@7770f470] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:36 IST" name="openBrowser" finished-at="2023-09-11T01:10:40 IST" duration-ms="4338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyAddProductFromProductDetailsPage()[pri:7, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:40 IST" name="verifyAddProductFromProductDetailsPage" finished-at="2023-09-11T01:10:41 IST" duration-ms="1262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddProductFromProductDetailsPage -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:41 IST" name="captureResult" finished-at="2023-09-11T01:10:41 IST" duration-ms="240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddProductFromProductDetailsPage status=SUCCESS method=AddToCartTest.verifyAddProductFromProductDetailsPage()[pri:7, instance:test.AddToCartTest@7770f470] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:41 IST" name="openBrowser" finished-at="2023-09-11T01:10:46 IST" duration-ms="4225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyClickOnProductNameFromCart()[pri:8, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:46 IST" name="verifyClickOnProductNameFromCart" finished-at="2023-09-11T01:10:47 IST" duration-ms="1038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyClickOnProductNameFromCart -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:47 IST" name="captureResult" finished-at="2023-09-11T01:10:47 IST" duration-ms="468" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyClickOnProductNameFromCart status=SUCCESS method=AddToCartTest.verifyClickOnProductNameFromCart()[pri:8, instance:test.AddToCartTest@7770f470] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:47 IST" name="openBrowser" finished-at="2023-09-11T01:10:52 IST" duration-ms="4427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="addMultipleProductsInCart()[pri:9, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:52 IST" name="addMultipleProductsInCart" finished-at="2023-09-11T01:10:53 IST" duration-ms="1611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMultipleProductsInCart -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:53 IST" name="captureResult" finished-at="2023-09-11T01:10:53 IST" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMultipleProductsInCart status=SUCCESS method=AddToCartTest.addMultipleProductsInCart()[pri:9, instance:test.AddToCartTest@7770f470] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:53 IST" name="openBrowser" finished-at="2023-09-11T01:10:59 IST" duration-ms="5353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyProductNameOFProductPageWithCartPage()[pri:10, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:10:59 IST" name="verifyProductNameOFProductPageWithCartPage" finished-at="2023-09-11T01:11:00 IST" duration-ms="1047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductNameOFProductPageWithCartPage -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:11:00 IST" name="captureResult" finished-at="2023-09-11T01:11:00 IST" duration-ms="395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyProductNameOFProductPageWithCartPage status=SUCCESS method=AddToCartTest.verifyProductNameOFProductPageWithCartPage()[pri:10, instance:test.AddToCartTest@7770f470] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:11:00 IST" name="openBrowser" finished-at="2023-09-11T01:11:04 IST" duration-ms="4245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheProductPrice()[pri:11, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:11:04 IST" name="verifyTheProductPrice" finished-at="2023-09-11T01:11:05 IST" duration-ms="991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheProductPrice -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:11:05 IST" name="captureResult" finished-at="2023-09-11T01:11:06 IST" duration-ms="265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheProductPrice status=SUCCESS method=AddToCartTest.verifyTheProductPrice()[pri:11, instance:test.AddToCartTest@7770f470] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.AddToCartTest@7770f470]" started-at="2023-09-11T01:14:30 IST" name="publish" finished-at="2023-09-11T01:14:31 IST" duration-ms="674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.AddToCartTest -->
      <class name="test.CheckoutTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:07:44 IST" name="configureReports" finished-at="2023-09-11T01:07:44 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:12:48 IST" name="openBrowser" finished-at="2023-09-11T01:12:53 IST" duration-ms="4778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyWorkingOfCheckoutButton()[pri:1, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:12:53 IST" name="verifyWorkingOfCheckoutButton" finished-at="2023-09-11T01:12:54 IST" duration-ms="1561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWorkingOfCheckoutButton -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:12:54 IST" name="captureResult" finished-at="2023-09-11T01:12:55 IST" duration-ms="447" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWorkingOfCheckoutButton status=SUCCESS method=CheckoutTest.verifyWorkingOfCheckoutButton()[pri:1, instance:test.CheckoutTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:12:55 IST" name="openBrowser" finished-at="2023-09-11T01:13:01 IST" duration-ms="6441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyAlphaCharactersInFirstNameField()[pri:2, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:01 IST" name="verifyAlphaCharactersInFirstNameField" finished-at="2023-09-11T01:13:03 IST" duration-ms="2095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlphaCharactersInFirstNameField -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:03 IST" name="captureResult" finished-at="2023-09-11T01:13:04 IST" duration-ms="517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlphaCharactersInFirstNameField status=SUCCESS method=CheckoutTest.verifyAlphaCharactersInFirstNameField()[pri:2, instance:test.CheckoutTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:04 IST" name="openBrowser" finished-at="2023-09-11T01:13:09 IST" duration-ms="5530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyNumbersInFirstNameField()[pri:3, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:09 IST" name="verifyNumbersInFirstNameField" finished-at="2023-09-11T01:13:11 IST" duration-ms="1987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNumbersInFirstNameField -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:11 IST" name="captureResult" finished-at="2023-09-11T01:13:12 IST" duration-ms="310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNumbersInFirstNameField status=SUCCESS method=CheckoutTest.verifyNumbersInFirstNameField()[pri:3, instance:test.CheckoutTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:12 IST" name="openBrowser" finished-at="2023-09-11T01:13:19 IST" duration-ms="7021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifySpecialCharactersInFirstNameField()[pri:4, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:19 IST" name="verifySpecialCharactersInFirstNameField" finished-at="2023-09-11T01:13:20 IST" duration-ms="1727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySpecialCharactersInFirstNameField -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:20 IST" name="captureResult" finished-at="2023-09-11T01:13:21 IST" duration-ms="498" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySpecialCharactersInFirstNameField status=SUCCESS method=CheckoutTest.verifySpecialCharactersInFirstNameField()[pri:4, instance:test.CheckoutTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:21 IST" name="openBrowser" finished-at="2023-09-11T01:13:26 IST" duration-ms="4708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyAlphaCharactersAndNumbersInFirstNameField()[pri:5, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:26 IST" name="verifyAlphaCharactersAndNumbersInFirstNameField" finished-at="2023-09-11T01:13:27 IST" duration-ms="1294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlphaCharactersAndNumbersInFirstNameField -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:27 IST" name="captureResult" finished-at="2023-09-11T01:13:27 IST" duration-ms="224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlphaCharactersAndNumbersInFirstNameField status=SUCCESS method=CheckoutTest.verifyAlphaCharactersAndNumbersInFirstNameField()[pri:5, instance:test.CheckoutTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:27 IST" name="openBrowser" finished-at="2023-09-11T01:13:32 IST" duration-ms="4435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyAlphaCharactersInLastNameField()[pri:6, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:32 IST" name="verifyAlphaCharactersInLastNameField" finished-at="2023-09-11T01:13:34 IST" duration-ms="2503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlphaCharactersInLastNameField -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:34 IST" name="captureResult" finished-at="2023-09-11T01:13:34 IST" duration-ms="283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlphaCharactersInLastNameField status=SUCCESS method=CheckoutTest.verifyAlphaCharactersInLastNameField()[pri:6, instance:test.CheckoutTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:34 IST" name="openBrowser" finished-at="2023-09-11T01:13:38 IST" duration-ms="4035" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyNumbersInLastNameField()[pri:7, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:38 IST" name="verifyNumbersInLastNameField" finished-at="2023-09-11T01:13:40 IST" duration-ms="1770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNumbersInLastNameField -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:40 IST" name="captureResult" finished-at="2023-09-11T01:13:40 IST" duration-ms="267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNumbersInLastNameField status=SUCCESS method=CheckoutTest.verifyNumbersInLastNameField()[pri:7, instance:test.CheckoutTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:40 IST" name="openBrowser" finished-at="2023-09-11T01:13:47 IST" duration-ms="6620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifySpecialCharactersInLastNameField()[pri:8, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:47 IST" name="verifySpecialCharactersInLastNameField" finished-at="2023-09-11T01:13:49 IST" duration-ms="1678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySpecialCharactersInLastNameField -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:49 IST" name="captureResult" finished-at="2023-09-11T01:13:49 IST" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySpecialCharactersInLastNameField status=SUCCESS method=CheckoutTest.verifySpecialCharactersInLastNameField()[pri:8, instance:test.CheckoutTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:49 IST" name="openBrowser" finished-at="2023-09-11T01:13:53 IST" duration-ms="3997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyAlphaCharactersAndNumbersInLastNameField()[pri:9, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:53 IST" name="verifyAlphaCharactersAndNumbersInLastNameField" finished-at="2023-09-11T01:13:55 IST" duration-ms="1874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlphaCharactersAndNumbersInLastNameField -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:55 IST" name="captureResult" finished-at="2023-09-11T01:13:55 IST" duration-ms="259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlphaCharactersAndNumbersInLastNameField status=SUCCESS method=CheckoutTest.verifyAlphaCharactersAndNumbersInLastNameField()[pri:9, instance:test.CheckoutTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:55 IST" name="openBrowser" finished-at="2023-09-11T01:13:59 IST" duration-ms="3901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyValidPostalCodeInPostalCodeField()[pri:10, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:13:59 IST" name="verifyValidPostalCodeInPostalCodeField" finished-at="2023-09-11T01:14:02 IST" duration-ms="2380" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h3[@data-test='error']"}
  (Session info: chrome=116.0.5845.179)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ba3ac1f7b6d70130b1ad34057d41c24f, findElement {using=xpath, value=//h3[@data-test='error']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.179, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\User\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58747/devtoo..., se:cdpVersion: 116.0.5845.179, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ba3ac1f7b6d70130b1ad34057d41c24f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h3[@data-test='error']"}
  (Session info: chrome=116.0.5845.179)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ba3ac1f7b6d70130b1ad34057d41c24f, findElement {using=xpath, value=//h3[@data-test='error']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.179, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\User\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58747/devtoo..., se:cdpVersion: 116.0.5845.179, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ba3ac1f7b6d70130b1ad34057d41c24f
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy19.getText(Unknown Source)
at pom.CheckoutPage.getDisplyedErrorMessage(CheckoutPage.java:35)
at test.CheckoutTest.verifyValidPostalCodeInPostalCodeField(CheckoutTest.java:155)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidPostalCodeInPostalCodeField -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:14:02 IST" name="captureResult" finished-at="2023-09-11T01:14:02 IST" duration-ms="311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyValidPostalCodeInPostalCodeField status=FAILURE method=CheckoutTest.verifyValidPostalCodeInPostalCodeField()[pri:10, instance:test.CheckoutTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:14:02 IST" name="openBrowser" finished-at="2023-09-11T01:14:06 IST" duration-ms="4396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyFourDigitNumberInPostalCodeField()[pri:11, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:14:06 IST" name="verifyFourDigitNumberInPostalCodeField" finished-at="2023-09-11T01:14:09 IST" duration-ms="2516" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h3[@data-test='error']"}
  (Session info: chrome=116.0.5845.179)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [faf642307835d8cf3b5fafc9fd9fd309, findElement {using=xpath, value=//h3[@data-test='error']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.179, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\User\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58768}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58768/devtoo..., se:cdpVersion: 116.0.5845.179, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: faf642307835d8cf3b5fafc9fd9fd309]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h3[@data-test='error']"}
  (Session info: chrome=116.0.5845.179)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [faf642307835d8cf3b5fafc9fd9fd309, findElement {using=xpath, value=//h3[@data-test='error']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.179, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\User\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58768}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58768/devtoo..., se:cdpVersion: 116.0.5845.179, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: faf642307835d8cf3b5fafc9fd9fd309
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy19.getText(Unknown Source)
at pom.CheckoutPage.getDisplyedErrorMessage(CheckoutPage.java:35)
at test.CheckoutTest.verifyFourDigitNumberInPostalCodeField(CheckoutTest.java:171)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFourDigitNumberInPostalCodeField -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:14:09 IST" name="captureResult" finished-at="2023-09-11T01:14:09 IST" duration-ms="286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFourDigitNumberInPostalCodeField status=FAILURE method=CheckoutTest.verifyFourDigitNumberInPostalCodeField()[pri:11, instance:test.CheckoutTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:14:09 IST" name="openBrowser" finished-at="2023-09-11T01:14:13 IST" duration-ms="3965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyAlphaCharactersInPostalCodeField()[pri:12, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:14:13 IST" name="verifyAlphaCharactersInPostalCodeField" finished-at="2023-09-11T01:14:15 IST" duration-ms="2189" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h3[@data-test='error']"}
  (Session info: chrome=116.0.5845.179)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [12e9ff22dcd9802442550bd5fbb67b3b, findElement {using=xpath, value=//h3[@data-test='error']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.179, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\User\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58789}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58789/devtoo..., se:cdpVersion: 116.0.5845.179, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 12e9ff22dcd9802442550bd5fbb67b3b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h3[@data-test='error']"}
  (Session info: chrome=116.0.5845.179)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [12e9ff22dcd9802442550bd5fbb67b3b, findElement {using=xpath, value=//h3[@data-test='error']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.179, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\User\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58789}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58789/devtoo..., se:cdpVersion: 116.0.5845.179, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 12e9ff22dcd9802442550bd5fbb67b3b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy19.getText(Unknown Source)
at pom.CheckoutPage.getDisplyedErrorMessage(CheckoutPage.java:35)
at test.CheckoutTest.verifyAlphaCharactersInPostalCodeField(CheckoutTest.java:186)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlphaCharactersInPostalCodeField -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:14:15 IST" name="captureResult" finished-at="2023-09-11T01:14:16 IST" duration-ms="516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlphaCharactersInPostalCodeField status=FAILURE method=CheckoutTest.verifyAlphaCharactersInPostalCodeField()[pri:12, instance:test.CheckoutTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:14:16 IST" name="openBrowser" finished-at="2023-09-11T01:14:20 IST" duration-ms="4678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifySpecialCharactersInPostalCodeField()[pri:13, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:14:20 IST" name="verifySpecialCharactersInPostalCodeField" finished-at="2023-09-11T01:14:23 IST" duration-ms="2201" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h3[@data-test='error']"}
  (Session info: chrome=116.0.5845.179)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0a06b71192218c508974da024b3ba3a7, findElement {using=xpath, value=//h3[@data-test='error']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.179, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\User\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58808}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58808/devtoo..., se:cdpVersion: 116.0.5845.179, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0a06b71192218c508974da024b3ba3a7]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h3[@data-test='error']"}
  (Session info: chrome=116.0.5845.179)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0a06b71192218c508974da024b3ba3a7, findElement {using=xpath, value=//h3[@data-test='error']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.179, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\User\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58808}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58808/devtoo..., se:cdpVersion: 116.0.5845.179, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0a06b71192218c508974da024b3ba3a7
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy19.getText(Unknown Source)
at pom.CheckoutPage.getDisplyedErrorMessage(CheckoutPage.java:35)
at test.CheckoutTest.verifySpecialCharactersInPostalCodeField(CheckoutTest.java:202)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySpecialCharactersInPostalCodeField -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:14:23 IST" name="captureResult" finished-at="2023-09-11T01:14:23 IST" duration-ms="456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySpecialCharactersInPostalCodeField status=FAILURE method=CheckoutTest.verifySpecialCharactersInPostalCodeField()[pri:13, instance:test.CheckoutTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:14:23 IST" name="openBrowser" finished-at="2023-09-11T01:14:27 IST" duration-ms="4094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="verifyTheWrokingOfContinueButtonWithAllValidInformation()[pri:14, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:14:27 IST" name="verifyTheWrokingOfContinueButtonWithAllValidInformation" finished-at="2023-09-11T01:14:29 IST" duration-ms="1415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheWrokingOfContinueButtonWithAllValidInformation -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:14:29 IST" name="captureResult" finished-at="2023-09-11T01:14:29 IST" duration-ms="154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheWrokingOfContinueButtonWithAllValidInformation status=SUCCESS method=CheckoutTest.verifyTheWrokingOfContinueButtonWithAllValidInformation()[pri:14, instance:test.CheckoutTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.CheckoutTest@77f1baf5]" started-at="2023-09-11T01:14:31 IST" name="publish" finished-at="2023-09-11T01:14:31 IST" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.CheckoutTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
